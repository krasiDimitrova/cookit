// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/users/authenticator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	users "github.com/krasimiraMilkova/cookit/pkg/users"
	http "net/http"
	reflect "reflect"
)

// MockUserAuthenticator is a mock of UserAuthenticator interface
type MockUserAuthenticator struct {
	ctrl     *gomock.Controller
	recorder *MockUserAuthenticatorMockRecorder
}

// MockUserAuthenticatorMockRecorder is the mock recorder for MockUserAuthenticator
type MockUserAuthenticatorMockRecorder struct {
	mock *MockUserAuthenticator
}

// NewMockUserAuthenticator creates a new mock instance
func NewMockUserAuthenticator(ctrl *gomock.Controller) *MockUserAuthenticator {
	mock := &MockUserAuthenticator{ctrl: ctrl}
	mock.recorder = &MockUserAuthenticatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserAuthenticator) EXPECT() *MockUserAuthenticatorMockRecorder {
	return m.recorder
}

// GenerateTokenForUser mocks base method
func (m *MockUserAuthenticator) GenerateTokenForUser(user *users.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateTokenForUser", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateTokenForUser indicates an expected call of GenerateTokenForUser
func (mr *MockUserAuthenticatorMockRecorder) GenerateTokenForUser(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateTokenForUser", reflect.TypeOf((*MockUserAuthenticator)(nil).GenerateTokenForUser), user)
}

// VerifyJWT mocks base method
func (m *MockUserAuthenticator) VerifyJWT(next http.Handler) http.Handler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyJWT", next)
	ret0, _ := ret[0].(http.Handler)
	return ret0
}

// VerifyJWT indicates an expected call of VerifyJWT
func (mr *MockUserAuthenticatorMockRecorder) VerifyJWT(next interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyJWT", reflect.TypeOf((*MockUserAuthenticator)(nil).VerifyJWT), next)
}
